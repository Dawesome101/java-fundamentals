/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class LibraryTest {
    @Test void testLibraryRoll() {
        Library testLibrary = new Library();

        int[] testArr = new int[6];

        assertTrue(testLibrary.roll(6).length == testArr.length);
    }

    @Test void testLibraryRollDuplicate(){
        Library testLibrary = new Library();

        int[] testRollsFalse = {1, 2, 3, 4, 5, 6, 7};
        int[] testRollsTrue = {1, 2, 3, 4, 4, 5, 6, 7};
        int[] testRollsOneFalse = {1};

        assertTrue(testLibrary.duplicates(testRollsFalse) == false);
        assertTrue(testLibrary.duplicates(testRollsTrue) == true);
        assertTrue(testLibrary.duplicates(testRollsOneFalse) == false);
    }

    @Test void testLibraryAverageCalculator(){
        Library testLibrary = new Library();

        int[] testArr01 = {5, 5, 5, 5};
        float testArrTrue01Avg = 5f;
        float testArrFalse01Avg = 20.2f;

        int[] testArr02 = {7, 20, 8, -22};
        float testArrTrue02Avg = 3.25f;
        float testArrFalse02Avg = 2000f;

        int[] testArr03 = {65, 700, 28, 18, 7, 20, 8, -22};
        float testArrTrue03Avg = 103f;
        float testArrFalse03Avg = 2000f;

        assertTrue(testLibrary.averageCalculator(testArr01) == testArrTrue01Avg);
        assertTrue(testLibrary.averageCalculator(testArr01) != testArrFalse01Avg);

        assertTrue(testLibrary.averageCalculator(testArr02) == testArrTrue02Avg);
        assertTrue(testLibrary.averageCalculator(testArr02) != testArrFalse02Avg);

        assertTrue(testLibrary.averageCalculator(testArr03) == testArrTrue03Avg);
        assertTrue(testLibrary.averageCalculator(testArr03) != testArrFalse03Avg);
    }

    @Test void testLibraryLowestAverage(){
        Library testLibrary = new Library();

        int[][] testArrs = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };
        float testArrsTrueAvg = 57f;
        float testArrsFalseAvg = 400.72f;

        assertTrue(testLibrary.lowestAverage(testArrs) == testArrsTrueAvg);
        assertTrue(testLibrary.lowestAverage(testArrs) != testArrsFalseAvg);
    }
}
